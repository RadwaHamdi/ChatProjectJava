/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package javaprojectcleintside;

import common.user;
import java.awt.Point;
import java.awt.event.MouseEvent;
import java.awt.event.MouseListener;
import java.util.Vector;
import javax.swing.JList;
import javax.swing.JOptionPane;

/**
 *
 * @author ewess
 */
public class FriendRequestFrame extends javax.swing.JFrame {
    Controller controller;
    Vector<user> friend_requests;
     Vector requests;
     Vector newlist;
     String request_sender="";
    /**
     * Creates new form FriendRequestFrame
     */
    public FriendRequestFrame(Point point,Controller c,Vector<user> friendRequests) {
        initComponents();
        setLocation(point);
        requests=new Vector();
        for (int i = 0; i < friendRequests.size(); i++) {
            requests.add(friendRequests.get(i).getUserName());
        }
        newlist=requests;
        System.out.println(newlist);
        friend_requests=friendRequests;
        controller=c;
        friendRequestsList.setListData(requests);
        setDefaultCloseOperation(DISPOSE_ON_CLOSE);
        setSize(382, 192);
        setResizable(false);   
        setVisible(true);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        friendRequestsList = new javax.swing.JList();
        acceptButton = new javax.swing.JButton();
        denyButton = new javax.swing.JButton();
        cancelButton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Friend Requests");
        setMaximumSize(new java.awt.Dimension(382, 192));
        setMinimumSize(new java.awt.Dimension(382, 192));
        setUndecorated(true);
        getContentPane().setLayout(null);

        friendRequestsList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Item 1", "Item 2", "Item 3", "Item 4", "Item 5" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        friendRequestsList.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        friendRequestsList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                friendRequestsListMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(friendRequestsList);

        getContentPane().add(jScrollPane1);
        jScrollPane1.setBounds(10, 10, 270, 170);

        acceptButton.setText("accept");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });
        getContentPane().add(acceptButton);
        acceptButton.setBounds(286, 11, 86, 23);

        denyButton.setText("deny");
        denyButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                denyButtonActionPerformed(evt);
            }
        });
        getContentPane().add(denyButton);
        denyButton.setBounds(286, 40, 86, 23);

        cancelButton.setText("cancel");
        cancelButton.setBorder(null);
        cancelButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cancelButtonActionPerformed(evt);
            }
        });
        getContentPane().add(cancelButton);
        cancelButton.setBounds(286, 69, 86, 20);

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/resources/friendRequests.png"))); // NOI18N
        jLabel1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().add(jLabel1);
        jLabel1.setBounds(0, 0, 380, 190);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void cancelButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cancelButtonActionPerformed
        // TODO add your handling code here:
        dispose();
    }//GEN-LAST:event_cancelButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
    try{
       
     request_sender=friendRequestsList.getSelectedValue().toString();
      for(int i=0;i<friend_requests.size();i++){
          if(friend_requests.get(i).getUserName().equals(request_sender)){
             
              controller.acceptFriendRequest(controller.newcleint.getEmail(),friend_requests.get(i).getEmail());
              
             
              break;
          }
      }
      
      
        System.out.println("newlist is :"+newlist);
      for(int i=0;i<newlist.size();i++){
          if(newlist.get(i).equals(request_sender)){
              newlist.remove(i);
          }
         
      }
        System.out.println("newlist after is :"+newlist);
              friendRequestsList.setListData(newlist); 
           
    }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Please choose item from list");
    }
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void denyButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_denyButtonActionPerformed
        // TODO add your handling code here:
        try{
             request_sender=friendRequestsList.getSelectedValue().toString();
        
      for(int i=0;i<friend_requests.size();i++){
          if(friend_requests.get(i).getUserName().equals(request_sender)){
             
              controller.denyFriendRequest(controller.newcleint.getEmail(),friend_requests.get(i).getEmail());
              
             
              break;
          }
      }
      
     
            System.out.println("new lis is :"+newlist);
      for(int i=0;i<newlist.size();i++){
          if(newlist.get(i).equals(request_sender)){
              newlist.remove(i);
          }
         
          
      }
              System.out.println("new list after is "+newlist);
              friendRequestsList.setListData(newlist); 
      
        }catch(Exception e){
        JOptionPane.showMessageDialog(null, "Please choose item from list");
        }
        
    }//GEN-LAST:event_denyButtonActionPerformed

    private void friendRequestsListMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_friendRequestsListMousePressed
       
       
       
    }//GEN-LAST:event_friendRequestsListMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FriendRequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FriendRequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FriendRequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FriendRequestFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               // new FriendRequestFrame(new Point(30, 30)).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton cancelButton;
    private javax.swing.JButton denyButton;
    private javax.swing.JList friendRequestsList;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables
}
